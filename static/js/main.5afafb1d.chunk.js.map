{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/FeedBack/FeedBack.js","App.js","index.js"],"names":["StyledP","styled","p","StyledSpan","span","Statistics","good","neutral","bad","total","positivePercentage","toFixed","StyledDiv","div","StyledButton","button","FeedbackOptions","options","onLeaveFeedback","onClick","map","buttonName","index","name","h1","StyledSecondTitle","h2","Section","title","children","Notification","message","StyledSection","section","StyleList","ul","FeedBack","countTotal","countPositive","changeValue","totalCount","positiveCount","App","state","e","key","target","setState","PrevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","positive","Math","abs","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5afafb1d.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledP = styled.p`\r\n  font-weight: 500;\r\n  margin: 5px 0;\r\n`;\r\n\r\n\r\nconst StyledSpan = styled.span``;\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) => {\r\n  return (\r\n    <>\r\n      <li>\r\n        <StyledP>\r\n          Good: <StyledSpan>{good}</StyledSpan>\r\n        </StyledP>\r\n      </li>\r\n      <li>\r\n        <StyledP>\r\n          Neutral: <StyledSpan>{neutral}</StyledSpan>\r\n        </StyledP>\r\n      </li>\r\n      <li>\r\n        <StyledP>\r\n          Bad: <StyledSpan>{bad}</StyledSpan>\r\n        </StyledP>\r\n      </li>\r\n      <li>\r\n        <StyledP>\r\n          Total: <StyledSpan>{total}</StyledSpan>\r\n        </StyledP>\r\n      </li>\r\n      <li>\r\n        <StyledP>\r\n          Positive feedback:{' '}\r\n          <StyledSpan>\r\n            {positivePercentage ? positivePercentage.toFixed(2) : 0}%\r\n          </StyledSpan>\r\n        </StyledP>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n  };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledDiv = styled.div``;\r\n\r\nconst StyledButton = styled.button`\r\n  color: teal;\r\n  font-size: 30px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => {\r\n    return (\r\n        <StyledDiv onClick={onLeaveFeedback}>\r\n            {options.map((buttonName, index) => <StyledButton key={index} name= {buttonName} > {buttonName} </StyledButton>)}\r\n      </StyledDiv>\r\n    );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\n// ////////////////////////////////////////////////////////////////////\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledMainTitle = styled.h1``;\r\nconst StyledSecondTitle = styled.h2`\r\n  font-size: 30px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <StyledSecondTitle>{title}</StyledSecondTitle>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\n// ////////////////////////////////////////////////////////////////////\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({message}) => {\r\n    return (\r\n    <p>{message}</p>\r\n    );\r\n};\r\n\r\nexport default Notification;\r\n\r\n// ////////////////////////////////////////////////////////////////////\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n  };","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Section from '../Section/Section';\r\nimport Notification from '../Notification/Notification';\r\n\r\n// //////////////////////////////////////////////////////////////\r\n\r\nconst StyledSection = styled.section`\r\n  padding-left: 20px;\r\n  font-size: 30px;\r\n`;\r\n\r\nconst StyledMainTitle = styled.h1``;\r\n\r\nconst StyledButton = styled.button`\r\n  color: teal;\r\n  font-size: 30px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst StyledSecondTitle = styled.h2`\r\n  font-size: 30px;\r\n`;\r\n\r\nconst StyledP = styled.p`\r\n  font-weight: 500;\r\n  margin: 5px 0;\r\n`;\r\n\r\nconst StyleList = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nconst StyledSpan = styled.span``;\r\n\r\nconst StyledDiv = styled.div``;\r\n\r\n// ///////////////////////////////////////////////////////////////////////////////\r\n\r\nconst FeedBack = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  countTotal,\r\n  countPositive,\r\n  changeValue,\r\n}) => {\r\n  const totalCount = countTotal();\r\n  const positiveCount = countPositive();\r\n\r\n  return (\r\n    <StyledSection>\r\n      <Section title={'Please leave feedback'}>\r\n        <FeedbackOptions\r\n          options={['good', 'neutral', 'bad']}\r\n          onLeaveFeedback={changeValue}\r\n        ></FeedbackOptions>\r\n      </Section>\r\n      <Section title={'Statistics'}>\r\n        <StyleList>\r\n          {totalCount ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={totalCount}\r\n              positivePercentage={positiveCount}\r\n            ></Statistics>\r\n          ) : (\r\n            <Notification message=\"No feedback given\"></Notification>\r\n          )}\r\n        </StyleList>\r\n      </Section>\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nexport default FeedBack;\r\n\r\n// ////////////////////////////////////////////////////////////////////\r\nFeedBack.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  changeValue: PropTypes.func.isRequired,\r\n  countTotal: PropTypes.func.isRequired,\r\n  countPositive: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport FeedBack from './components/FeedBack/FeedBack';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\nchangeValue = (e) => {\n  const key = e.target.name;\n  this.setState(PrevState => ({\n    [key]:PrevState[key]+1\n  }))\n}\n\ncountTotalFeedback = () => {\n  const val = Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  return val\n}\n\n\ncountPositiveFeedbackPercentage = () => {\n  const positive = (this.state.good/(this.state.neutral+this.state.bad+this.state.good))*100;\n  return  Math.abs(positive)\n}\n\n\n  \n\n  render() {\n    return (\n    <>\n      <FeedBack good={this.state.good} \n      neutral={this.state.neutral} \n      bad={this.state.bad} \n      changeValue={this.changeValue} \n      countTotal={this.countTotalFeedback} \n      countPositive={this.countPositiveFeedbackPercentage}/>\n    </>\n    );\n\n  }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}